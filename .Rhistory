knitr::opts_chunk$set(echo = TRUE)
setwd("~/")
datos_ozone = read.csv("./datos/LAozone.data")
datos_sudafrica = read.csv("./datos/africa.data")
#Cambiamos la columna 'famhist' que contiene caracteres por su equivalente en valores numéricos:
datos_sudafrica = data.frame(famhist = (ifelse(datos_sudafrica$famhist=="Absent",0,1)),datos_sudafrica[,-which(names(datos_sudafrica) == "famhist")])
knitr::opts_chunk$set(echo = TRUE)
setwd("~/")
set.seed(5)
library("AppliedPredictiveModeling")
library("caret")
library("leaps")
library("glmnet")
datos_sudafrica = read.csv("./datos/africa.data")
datos_sudafrica = datos_sudafrica[,-which(names(datos_sudafrica) == "row.names")]
class(datos_sudafrica$famhist)
#Cambiamos la columna 'famhist' que contiene caracteres por su equivalente en valores numéricos:
datos_sudafrica = data.frame(famhist = (ifelse(datos_sudafrica$famhist=="Absent",0,1)),datos_sudafrica[,-which(names(datos_sudafrica) == "famhist")])
#Si queremos obtener un conjunto de indices train para luego ejecutar un modelo lineal sobre el train:
train = sample (nrow(datos_sudafrica), round(nrow(datos_sudafrica)*0.8))
#definimos ambos conjuntos en dos data sets diferentes:
sudafrica_train = datos_sudafrica[train,]
sudafrica_test = datos_sudafrica[-train,]
#realizamos un attach de los datos para evitar repetir código:
color <- c(rep('green',sum(datos_sudafrica$chd ==0)),rep('red',sum(datos_sudafrica$chd==1)))
pairs(datos_sudafrica, bg = color, pch = 22)
sudafricaTrans = preProcess(datos_sudafrica, method = c("BoxCox", "center", "scale", "pca"),thresh = 0.9)
summary(sudafricaTrans$rotation)
nearZeroVar(sudafricaTrans$rotation)
sudafricaTrans = preProcess(sudafrica_train[,-ncol(sudafrica_train)], method = c("BoxCox", "center", "scale"),thresh = 0.9)
sudafrica_train[,-ncol(sudafrica_train)] =predict(sudafricaTrans,sudafrica_train[,-ncol(sudafrica_train)])
regsub_sudafrica =regsubsets(datos_sudafrica[,-ncol(datos_sudafrica)], datos_sudafrica[,ncol(datos_sudafrica)])
summary(regsub_sudafrica)
###########################################################
# ESTO ES UNA CHAPUZA Y NO SABEMOS SI HABRÁ QUE HACERLO ASÍ Y/O AQUÍ
##########################################################
sudafrica_test[,-ncol(sudafrica_test)] =predict(sudafricaTrans,sudafrica_test[,-ncol(sudafrica_test)])
calculoErrorMatrizConfusion  = function (modelo, test, etiquetas){
prob_test = predict(modelo, test[,-which(names(test) == etiquetas)], type="response")
pred_test = rep(0, length(prob_test))
# predicciones por defecto 0
pred_test[prob_test >=0.5] = 1
# >= 0.5 clase 1
matriz_conf = table(pred_test, test[,which(names(test) == etiquetas)])
print(matriz_conf)
eout = mean(pred_test != test[,which(names(test) == etiquetas)])
}
m1_sudafrica = lm(chd ~ age, data=sudafrica_train)
eout_m1sud = calculoErrorMatrizConfusion(m1_sudafrica, sudafrica_test, "chd")
eout_m1sud
sudafrica_frame_1 = data.frame(sudafrica_train[,which(names(sudafrica_train) == "chd" | names(sudafrica_train) == "age" | names(sudafrica_train) == "famhist")])
m1_sudafrica = lm(chd ~ . , data=sudafrica_frame_1)
eout_m1sud = calculoErrorMatrizConfusion(m1_sudafrica, sudafrica_test, "chd")
eout_m1sud
sudafrica_frame_2 = data.frame(sudafrica_train[,which(names(sudafrica_train) == "chd" | names(sudafrica_train) == "age" | names(sudafrica_train) == "famhist" | names(sudafrica_train) == "tobacco")])
m2_sudafrica = lm(chd ~ . , data=sudafrica_frame_2)
eout_m2sud = calculoErrorMatrizConfusion(m2_sudafrica, sudafrica_test, "chd")
eout_m2sud
sudafrica_frame_3 = data.frame(sudafrica_train[,which(names(sudafrica_train) == "chd" | names(sudafrica_train) == "age" | names(sudafrica_train) == "famhist" | names(sudafrica_train) == "tobacco" | names(sudafrica_train) == "ldl")])
m3_sudafrica = lm(chd ~ . , data=sudafrica_frame_3)
eout_m3sud = calculoErrorMatrizConfusion(m3_sudafrica, sudafrica_test, "chd")
eout_m3sud
sudafrica_frame_4 = data.frame(sudafrica_train[,which(names(sudafrica_train) == "chd" | names(sudafrica_train) == "age" | names(sudafrica_train) == "famhist" | names(sudafrica_train) == "tobacco" | names(sudafrica_train) == "ldl" | names(sudafrica_train) == "typea")])
m4_sudafrica = lm(chd ~ . , data=sudafrica_frame_4)
eout_m4sud = calculoErrorMatrizConfusion(m4_sudafrica, sudafrica_test, "chd")
eout_m4sud
sudafrica_frame_5 = data.frame(sudafrica_train[,which(names(sudafrica_train) == "chd" | names(sudafrica_train) == "age" | names(sudafrica_train) == "famhist" | names(sudafrica_train) == "tobacco" | names(sudafrica_train) == "ldl" | names(sudafrica_train) == "typea")])
m5_sudafrica = lm(chd ~ I(age^2) + famhist + tobacco + ldl + typea, data=sudafrica_frame_5)
eout_m5sud = calculoErrorMatrizConfusion(m5_sudafrica, sudafrica_test, "chd")
eout_m5sud
etiquetas = sudafrica_train[,which(names(sudafrica_train) == "chd")]
tr = sudafrica_train[,-which(names(sudafrica_train) == "chd")]
tr = as.matrix(tr)
crossvalidation =cv.glmnet(tr,etiquetas,alpha=0)
print(crossvalidation$lambda.min)
modelo_reg = glmnet(tr,etiquetas,alpha=0,lambda=crossvalidation$lambda.min)
print(modelo_reg)
modelo_reg = glmnet(tr,etiquetas,alpha=0,lambda=0)
print(modelo_reg)
datos_sudafrica = read.csv("./datos/africa.data")
head(datos_sudafrica)
